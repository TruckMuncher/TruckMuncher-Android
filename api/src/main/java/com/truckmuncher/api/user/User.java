// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Volumes/home/projects/TruckMuncher-Protos/com/truckmuncher/api/user.proto
package com.truckmuncher.api.user;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class User extends Message {

  public static final String DEFAULT_ID = "";
  public static final String DEFAULT_FBUSERNAME = "";
  public static final String DEFAULT_TWUSERNAME = "";
  public static final Boolean DEFAULT_POSTTOFB = false;
  public static final Boolean DEFAULT_POSTTOTW = false;

  /**
   * Suitable for unique identification.
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public final String id;

  /**
   * The username of the linked Facebook account.
   *
   * Will be null if a Facebook account has not been linked.
   */
  @ProtoField(tag = 2, type = STRING)
  public final String fbUsername;

  /**
   * The username of the linked Twitter account.
   *
   * Will be null if a Twitter account has not been linked.
   */
  @ProtoField(tag = 3, type = STRING)
  public final String twUsername;

  /**
   * If true, a post will be sent to Facebook when a truck goes in to serving mode.
   * This requires the user to be a Vendor, otherwise this field will be ignored.
   *
   * Will be null if a Facebook account has not been linked.
   */
  @ProtoField(tag = 4, type = BOOL)
  public final Boolean postToFb;

  /**
   * If true, a post will be sent to Twitter when a truck goes in to serving mode.
   * This requires the user to be a Vendor, otherwise this field will be ignored.
   *
   * Will be null if a Twitter account has not been linked.
   */
  @ProtoField(tag = 5, type = BOOL)
  public final Boolean postToTw;

  public User(String id, String fbUsername, String twUsername, Boolean postToFb, Boolean postToTw) {
    this.id = id;
    this.fbUsername = fbUsername;
    this.twUsername = twUsername;
    this.postToFb = postToFb;
    this.postToTw = postToTw;
  }

  private User(Builder builder) {
    this(builder.id, builder.fbUsername, builder.twUsername, builder.postToFb, builder.postToTw);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof User)) return false;
    User o = (User) other;
    return equals(id, o.id)
        && equals(fbUsername, o.fbUsername)
        && equals(twUsername, o.twUsername)
        && equals(postToFb, o.postToFb)
        && equals(postToTw, o.postToTw);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (fbUsername != null ? fbUsername.hashCode() : 0);
      result = result * 37 + (twUsername != null ? twUsername.hashCode() : 0);
      result = result * 37 + (postToFb != null ? postToFb.hashCode() : 0);
      result = result * 37 + (postToTw != null ? postToTw.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<User> {

    public String id;
    public String fbUsername;
    public String twUsername;
    public Boolean postToFb;
    public Boolean postToTw;

    public Builder() {
    }

    public Builder(User message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.fbUsername = message.fbUsername;
      this.twUsername = message.twUsername;
      this.postToFb = message.postToFb;
      this.postToTw = message.postToTw;
    }

    /**
     * Suitable for unique identification.
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * The username of the linked Facebook account.
     *
     * Will be null if a Facebook account has not been linked.
     */
    public Builder fbUsername(String fbUsername) {
      this.fbUsername = fbUsername;
      return this;
    }

    /**
     * The username of the linked Twitter account.
     *
     * Will be null if a Twitter account has not been linked.
     */
    public Builder twUsername(String twUsername) {
      this.twUsername = twUsername;
      return this;
    }

    /**
     * If true, a post will be sent to Facebook when a truck goes in to serving mode.
     * This requires the user to be a Vendor, otherwise this field will be ignored.
     *
     * Will be null if a Facebook account has not been linked.
     */
    public Builder postToFb(Boolean postToFb) {
      this.postToFb = postToFb;
      return this;
    }

    /**
     * If true, a post will be sent to Twitter when a truck goes in to serving mode.
     * This requires the user to be a Vendor, otherwise this field will be ignored.
     *
     * Will be null if a Twitter account has not been linked.
     */
    public Builder postToTw(Boolean postToTw) {
      this.postToTw = postToTw;
      return this;
    }

    @Override
    public User build() {
      checkRequiredFields();
      return new User(this);
    }
  }
}
