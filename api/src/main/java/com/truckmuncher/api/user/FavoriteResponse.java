// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Volumes/home/projects/TruckMuncher-Protos/com/truckmuncher/api/user.proto
package com.truckmuncher.api.user;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class FavoriteResponse extends Message {

  public static final List<String> DEFAULT_FAVORITES = Collections.emptyList();

  /**
   * The list of truckIds that are currently favorited by the User.
   */
  @ProtoField(tag = 1, type = STRING, label = REPEATED)
  public final List<String> favorites;

  public FavoriteResponse(List<String> favorites) {
    this.favorites = immutableCopyOf(favorites);
  }

  private FavoriteResponse(Builder builder) {
    this(builder.favorites);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FavoriteResponse)) return false;
    return equals(favorites, ((FavoriteResponse) other).favorites);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = favorites != null ? favorites.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<FavoriteResponse> {

    public List<String> favorites;

    public Builder() {
    }

    public Builder(FavoriteResponse message) {
      super(message);
      if (message == null) return;
      this.favorites = copyOf(message.favorites);
    }

    /**
     * The list of truckIds that are currently favorited by the User.
     */
    public Builder favorites(List<String> favorites) {
      this.favorites = checkForNulls(favorites);
      return this;
    }

    @Override
    public FavoriteResponse build() {
      return new FavoriteResponse(this);
    }
  }
}
