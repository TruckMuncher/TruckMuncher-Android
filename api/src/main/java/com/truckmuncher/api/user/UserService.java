// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Volumes/home/projects/TruckMuncher-Protos/com/truckmuncher/api/user.proto
package com.truckmuncher.api.user;

import retrofit.Callback;
import retrofit.RetrofitError;
import retrofit.http.Body;
import retrofit.http.POST;

public interface UserService {
  /**
   * Retrieve user account.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/getAccount")
  User getAccount(@Body GetAccountRequest request)
      throws RetrofitError;

  /**
   * Retrieve user account.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/getAccount")
  void getAccount(@Body GetAccountRequest request, Callback<User> callback);
  /**
   * Link another social media account to your existing account. This can be used by regular
   * users or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/linkAccount")
  User linkAccount(@Body LinkAccountRequest request)
      throws RetrofitError;

  /**
   * Link another social media account to your existing account. This can be used by regular
   * users or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/linkAccount")
  void linkAccount(@Body LinkAccountRequest request, Callback<User> callback);
  /**
   * Unlink a social media account that has been previously linked to your existing account. This can 
   * be used by regular users or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/unlinkAccounts")
  User unlinkAccounts(@Body UnlinkAccountsRequest request)
      throws RetrofitError;

  /**
   * Unlink a social media account that has been previously linked to your existing account. This can 
   * be used by regular users or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/unlinkAccounts")
  void unlinkAccounts(@Body UnlinkAccountsRequest request, Callback<User> callback);
  /**
   * Update a user's account. This can be used by regular users or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/modifyAccount")
  User modifyAccount(@Body ModifyAccountRequest request)
      throws RetrofitError;

  /**
   * Update a user's account. This can be used by regular users or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/modifyAccount")
  void modifyAccount(@Body ModifyAccountRequest request, Callback<User> callback);
  /**
   * Retrieve all of a user's favorite trucks.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/getFavorites")
  FavoriteResponse getFavorites(@Body GetFavoritesRequest request)
      throws RetrofitError;

  /**
   * Retrieve all of a user's favorite trucks.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/getFavorites")
  void getFavorites(@Body GetFavoritesRequest request, Callback<FavoriteResponse> callback);
  /**
   * Adds a truck to a User's list of favorite trucks. This can be used by regular users
   * or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/addFavorite")
  FavoriteResponse addFavorite(@Body FavoriteRequest request)
      throws RetrofitError;

  /**
   * Adds a truck to a User's list of favorite trucks. This can be used by regular users
   * or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/addFavorite")
  void addFavorite(@Body FavoriteRequest request, Callback<FavoriteResponse> callback);
  /**
   * Removes a truck from a User's list of favorite trucks. This can be used by regular users
   * or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/removeFavorite")
  FavoriteResponse removeFavorite(@Body FavoriteRequest request)
      throws RetrofitError;

  /**
   * Removes a truck from a User's list of favorite trucks. This can be used by regular users
   * or vendors.
   *
   * This call requires authorization
   */
  @POST("/com.truckmuncher.api.user.UserService/removeFavorite")
  void removeFavorite(@Body FavoriteRequest request, Callback<FavoriteResponse> callback);
}
