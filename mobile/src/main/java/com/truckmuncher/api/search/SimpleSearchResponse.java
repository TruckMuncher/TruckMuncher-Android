// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/brettnockerts/Documents/TruckMuncher/TruckMuncher-Protos/com/truckmuncher/api/search.proto
package com.truckmuncher.api.search;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class SimpleSearchResponse extends Message {

  public static final List<SearchResponse> DEFAULT_SEARCHRESPONSE = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<SearchResponse> searchResponse;

  public SimpleSearchResponse(List<SearchResponse> searchResponse) {
    this.searchResponse = immutableCopyOf(searchResponse);
  }

  private SimpleSearchResponse(Builder builder) {
    this(builder.searchResponse);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SimpleSearchResponse)) return false;
    return equals(searchResponse, ((SimpleSearchResponse) other).searchResponse);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = searchResponse != null ? searchResponse.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<SimpleSearchResponse> {

    public List<SearchResponse> searchResponse;

    public Builder() {
    }

    public Builder(SimpleSearchResponse message) {
      super(message);
      if (message == null) return;
      this.searchResponse = copyOf(message.searchResponse);
    }

    public Builder searchResponse(List<SearchResponse> searchResponse) {
      this.searchResponse = checkForNulls(searchResponse);
      return this;
    }

    @Override
    public SimpleSearchResponse build() {
      return new SimpleSearchResponse(this);
    }
  }
}
