// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Volumes/home/Dropbox/workspace/TruckMuncher-Protos/com/truckmuncher/api/menu.proto
package com.truckmuncher.api.menu;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class CategoryResponse extends Message {

    public static final Long DEFAULT_ID = 0L;
    public static final String DEFAULT_NAME = "";
    public static final String DEFAULT_NOTES = "";
    public static final Integer DEFAULT_ORDERINMENU = 0;

    /**
     * Non-negative value. Suitable for unique identification.
     */
    @ProtoField(tag = 1, type = INT64, label = REQUIRED)
    public final Long id;

    @ProtoField(tag = 2, type = STRING)
    public final String name;

    /**
     * Suitable for human consumption
     */
    @ProtoField(tag = 3, type = STRING)
    public final String notes;

    @ProtoField(tag = 4, type = INT32)
    public final Integer orderInMenu;

    public CategoryResponse(Long id, String name, String notes, Integer orderInMenu) {
        this.id = id;
        this.name = name;
        this.notes = notes;
        this.orderInMenu = orderInMenu;
    }

    private CategoryResponse(Builder builder) {
        this(builder.id, builder.name, builder.notes, builder.orderInMenu);
        setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof CategoryResponse)) return false;
        CategoryResponse o = (CategoryResponse) other;
        return equals(id, o.id)
                && equals(name, o.name)
                && equals(notes, o.notes)
                && equals(orderInMenu, o.orderInMenu);
    }

    @Override
    public int hashCode() {
        int result = hashCode;
        if (result == 0) {
            result = id != null ? id.hashCode() : 0;
            result = result * 37 + (name != null ? name.hashCode() : 0);
            result = result * 37 + (notes != null ? notes.hashCode() : 0);
            result = result * 37 + (orderInMenu != null ? orderInMenu.hashCode() : 0);
            hashCode = result;
        }
        return result;
    }

    public static final class Builder extends Message.Builder<CategoryResponse> {

        public Long id;
        public String name;
        public String notes;
        public Integer orderInMenu;

        public Builder() {
        }

        public Builder(CategoryResponse message) {
            super(message);
            if (message == null) return;
            this.id = message.id;
            this.name = message.name;
            this.notes = message.notes;
            this.orderInMenu = message.orderInMenu;
        }

        /**
         * Non-negative value. Suitable for unique identification.
         */
        public Builder id(Long id) {
            this.id = id;
            return this;
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Suitable for human consumption
         */
        public Builder notes(String notes) {
            this.notes = notes;
            return this;
        }

        public Builder orderInMenu(Integer orderInMenu) {
            this.orderInMenu = orderInMenu;
            return this;
        }

        @Override
        public CategoryResponse build() {
            checkRequiredFields();
            return new CategoryResponse(this);
        }
    }
}
